1.  let 定义变量没有变量提升
2.  let 不能重复声明
3.  let 暂时性死亡：  在自身当前作用域中不允许同名的变量进来 ——> 报错
4.  let 级块作用域: let 定义的变量只在括号内起作用
5.  闭包：外部函数中有一个内部函数，内部函数引用外部函数中的变量，这样变量不释放，一直保存，形成一个闭包。
          缺点 ->内存泄漏
6.  const : 无变量提升、不能重复声明、暂时性死亡、级块作用域、  const定义常量,所定义的常量不允许修改(基本数据类型)
            const定义的obj 可以对对象进行修改，但是不能对指针(地址)进行修改,          (引用数据类型)
            Object.freeze();  ->冻结所选数组或对象，无法对其进行修改(不会报错)
7.  解构赋值：从数组和对象中提取值，对变量进行赋值，这被称为解构
        let arr = [1,2,3];
        let [a,b,c] = arr;


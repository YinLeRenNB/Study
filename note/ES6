1.  let 定义变量没有变量提升
2.  let 不能重复声明
3.  let 暂时性死亡：  在自身当前作用域中不允许同名的变量进来 ——> 报错
4.  let 级块作用域: let 定义的变量只在括号内起作用
5.  闭包：外部函数中有一个内部函数，内部函数引用外部函数中的变量，这样变量不释放，一直保存，形成一个闭包。
          缺点 ->内存泄漏
6.  const : 无变量提升、不能重复声明、暂时性死亡、级块作用域、  const定义常量,所定义的常量不允许修改(基本数据类型)
            const定义的obj 可以对对象进行修改，但是不能对指针(地址)进行修改,          (引用数据类型)
            Object.freeze();  ->冻结所选数组或对象，无法对其进行修改(不会报错)
7.  解构赋值：从数组和对象中提取值，对变量进行赋值，这被称为解构
        let arr = [1,2,3];
        let [a,b,c] = arr;
8.  模板字符串  ``反引号      `xxxxxxx${}xxxxxxxx`            字符串的拼接  支持标签、换行、数学运算
9.  把方法向对象添加属性 使所有的对象都可以直接使用(共享这种方法)  foo.xx    String.prototype.xx = function(){};
10. str.padStart(number,String) / padEnd()      ->number:扩展到一共几个  string:用什么str来进行扩展       start 从头开始  end 从后面开始
11. isFinite 检测数字是否为有限数字
12. Math.trunc ->去除一个数的小数部分 返回整数部分        Math.sign   ->正数返回1  0返回0  负数返回-1


箭头函数

1.  箭头函数：  函数中的 this 为执行时的this,   箭头函数中的this 声明时要到父作用域去找 
2.  箭头函数不能用于构造函数
3.  在箭头函数中不允许使用arguments  /  arguments用...rest 来代替